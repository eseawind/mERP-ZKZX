<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="securityCryptographyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography" />
		<section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
		<section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data" />
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net,Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821" />
		<sectionGroup name="spring">
			<section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
			<section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
		</sectionGroup>
		<section name="UserManagerProvider" type="Feng.UserManager.ProviderConfigurationSection, Feng.Security" />
		<section name="nhibernateSettings" type="Feng.NH.SessionFactoriesConfigSection, Feng.NH"/>
		<section name="AppConfig" type="Feng.Run.AppConfigSection, Feng.Run" />

	</configSections>

 <AppConfig name="AppConfig">
		<product name="zkzx" resource="Zkzx.Forms, Zkzx.Forms" serverPath="http://192.168.0.10/" version="1.0.0.0" product="调度指控中心" company="宁波中搜" litemode="false" debugmode="true"/>
	</AppConfig>
	
<spring>
    <context>
      <resource uri="config://spring/objects"/>
    </context>
    <objects xmlns="http://www.springframework.net">
      <description>Zkzx</description>
      <object name="Interceptor" type="Feng.NH.AuditLogInterceptor, Feng.Windows.Model" singleton="false"/>
    </objects>
  </spring> 
  
	<securityCryptographyConfiguration defaultHashInstance="hashprovider"
	  defaultSymmetricCryptoInstance="symprovider">
		<hashProviders>
			<add algorithmType="System.Security.Cryptography.SHA1Managed, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			  saltEnabled="true" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography"
			  name="hashprovider" />
		</hashProviders>
		<symmetricCryptoProviders>
			<add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			  protectedKeyFilename="C:\WINDOWS\system32\SymmetricKeyFile.key"
			  protectedKeyProtectionScope="LocalMachine" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography"
			  name="symprovider" />
		</symmetricCryptoProviders>
	</securityCryptographyConfiguration>

	<exceptionHandling>
		<exceptionPolicies>
			<add name="Global Policy">
				<exceptionTypes>
					<add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
					  postHandlingAction="None" name="Exception">
						<exceptionHandlers>
							<add type="Feng.Windows.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
								 logCategories="NotifyPolicyError" level="Warn"
								 formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

							<add type="Feng.Windows.Forms.AppMessageExceptionHandler, Feng.Windows.Forms"
							  name="AppMessageException Handler" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="Handle and Resume Policy">
				<exceptionTypes>
					<add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
					  postHandlingAction="None" name="Exception" >
						<exceptionHandlers>
							<add type="Feng.Windows.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
								 logCategories="NotifyPolicyError" level="Warn"
								 formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="Notify Policy Error">
				<exceptionTypes>
					<add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
					  postHandlingAction="None" name="Exception">
						<exceptionHandlers>
							<add type="Feng.Windows.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
								 logCategories="NotifyPolicyError" level="Warn"
								 formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

							<add type="Feng.Windows.Forms.AppMessageExceptionHandler, Feng.Windows.Forms"
							  name="AppMessageException Handler" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="Notify Policy Info">
				<exceptionTypes>
					<add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
					  postHandlingAction="None" name="Exception">
						<exceptionHandlers>
							<add type="Feng.Windows.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
								 logCategories="NotifyPolicyError" level="Warn"
								 formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />

							<add type="Feng.Windows.Forms.AppMessageWarningHandler, Feng.Windows.Forms"
							  name="AppMessageWarningHandler" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="Wrap Policy">
				<exceptionTypes>
					<add type="NHibernate.StaleObjectStateException, NHibernate"
					  postHandlingAction="ThrowNewException" name="StaleObjectStateException">
						<exceptionHandlers>
							<add type="Feng.Windows.log4netExceptionHandler, Feng.Windows" name="log4net Exception Handler"
								 logCategories="NotifyPolicyError" level="Warn"
								 formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
							<add exceptionMessage="出现多人操作，数据将自动刷新，请刷新后请重试！" exceptionMessageResourceType=""
							  wrapExceptionType="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
							  type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
							  name="Wrap Handler" />
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
		</exceptionPolicies>
	</exceptionHandling>

	<connectionStrings> 
	 <add name="DataConnectionString" connectionString="Data Source=192.168.0.10, 8033;Initial Catalog=Zkzx;User ID=sa;Password=qazwsxedc"
      providerName="System.Data.SqlClient" />
    <add name="GoogleMapOffset" connectionString="Data Source=192.168.0.10, 8033;Initial Catalog=GoogleMapOffset;User ID=sa;Password=qazwsxedc" providerName="System.Data.SqlClient"/>
    </connectionStrings>
	
	<dataConfiguration defaultDatabase="DataConnectionString" >
	</dataConfiguration>

	<UserManagerProvider defaultProvider="MockUserManager">
		<providers>
			<add name="WebServiceUserManager" description="User Manager with WebService" webServiceAddress="" type="Feng.UserManager.WebServiceProvider, Feng.Security" />
			<add name="AspNetUserManager" description="User Manager with Asp.Net" type="Feng.UserManager.AspNetProvider, Feng.Security" />
		  <add name="MockUserManager" description="MockUserManager" type="Feng.UserManager.MockProvider, Feng.Security" userName="100001" roles="系统管理员,系统开发人员,备案主管"/>
    </providers>
	</UserManagerProvider>
	<system.web>
		<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">
			<providers>
				<add name="SqlProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="LoginConnectionString" enablePasswordRetrieval="true" enablePasswordReset="true" requiresQuestionAndAnswer="true" passwordFormat="Encrypted" requiresUniqueEmail="true" minRequiredNonalphanumericCharacters="0" minRequiredPasswordLength="6" passwordStrengthRegularExpression="......" applicationName="zkzx" />
			</providers>
		</membership>
		<roleManager defaultProvider="SqlProvider" enabled="true" cacheRolesInCookie="true" cookieName=".ASPROLES" cookieTimeout="30" cookiePath="/" cookieRequireSSL="true" cookieSlidingExpiration="true" cookieProtection="All">
			<providers>
				<add name="SqlProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="LoginConnectionString" applicationName="zkzx" />
			</providers>
		</roleManager>
		<machineKey validationKey="6807704AC72B4B79719457D16C136AE0011945565DD89118F232B9B0F335DEF7559A11F7F168AE3BA1F03F902D52EEF92C4100CDD9E54CBA12FFF200ED73AB5B" decryptionKey="FCDBAC65C3FF54AC49CB6E429FB778811BD0976611D60E4A" validation="SHA1" />
	</system.web>


	<log4net debug="false">
		<appender name="rollingFile" type="log4net.Appender.RollingFileAppender,log4net, Version=1.2.10.0, Culture=neutral, PublicKeyToken=1b44e1d426115821">
			<param name="File" value="log.txt" />
			<param name="AppendToFile" value="true" />
			<param name="RollingStyle" value="Size" />
			<param name="DatePattern" value="yyyy.MM.dd" />
			<param name="StaticLogFileName" value="true" />
			<param name="maximumFileSize" value="10000KB" />
			<param name="maxSizeRollBackups" value="1" />
			<param name="staticLogFileName" value="true" />
			<layout type="log4net.Layout.PatternLayout,log4net">
				<header value="[Header]&#xD;&#xA;" />
				<footer value="[Footer]&#xD;&#xA;" />
				<conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
			</layout>
		</appender>
		<root>
			<priority value="DEBUG" />
			<appender-ref ref="rollingFile" />
		</root>
		<logger name="NHibernate">
			<level value="ERROR" />
		</logger>
		<logger name="NHibernate.SQL">
			<level value="DEBUG" />
		</logger>
	</log4net>

	<nhibernateSettings>
		<!-- List every session factory that will be needed; transaction management and closing sessions 
		will be managed with the open-session-in-view module -->
		<sessionFactories>
			<clearFactories/>
			<sessionFactory name="zkzx.model.config" factoryConfigPath="zkzx.model.config" isDefault="true"/>
		</sessionFactories>
	</nhibernateSettings>

	<appSettings>
	</appSettings>
	
	<startup useLegacyV2RuntimeActivationPolicy="true">
  	<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
 	</startup>
</configuration>